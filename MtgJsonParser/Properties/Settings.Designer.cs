//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MtgJsonParser.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("http://mtgjson.com/json/AllSets-x.json.zip")]
        public string JsonUrl {
            get {
                return ((string)(this["JsonUrl"]));
            }
            set {
                this["JsonUrl"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AllSets-x.json.zip")]
        public string JsonZipFilename {
            get {
                return ((string)(this["JsonZipFilename"]));
            }
            set {
                this["JsonZipFilename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AllSets-x.json")]
        public string JsonFilename {
            get {
                return ((string)(this["JsonFilename"]));
            }
            set {
                this["JsonFilename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AllSets-x.json")]
        public string JsonDirectory {
            get {
                return ((string)(this["JsonDirectory"]));
            }
            set {
                this["JsonDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\Users\\Liam\\Common\\dictionary.txt")]
        public string InputDictionaryFilename {
            get {
                return ((string)(this["InputDictionaryFilename"]));
            }
            set {
                this["InputDictionaryFilename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\Users\\Liam\\AppData\\Roaming\\Microsoft\\UProof\\MTG.DIC")]
        public string OutputDictionaryFilename {
            get {
                return ((string)(this["OutputDictionaryFilename"]));
            }
            set {
                this["OutputDictionaryFilename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("localhost")]
        public string MySqlServer {
            get {
                return ((string)(this["MySqlServer"]));
            }
            set {
                this["MySqlServer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("root")]
        public string MySqlUser {
            get {
                return ((string)(this["MySqlUser"]));
            }
            set {
                this["MySqlUser"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MySqlPassword {
            get {
                return ((string)(this["MySqlPassword"]));
            }
            set {
                this["MySqlPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("delverdb")]
        public string MySqlDatabase {
            get {
                return ((string)(this["MySqlDatabase"]));
            }
            set {
                this["MySqlDatabase"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3306")]
        public string MySqlPort {
            get {
                return ((string)(this["MySqlPort"]));
            }
            set {
                this["MySqlPort"] = value;
            }
        }
    }
}
